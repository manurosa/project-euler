/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

function isEven (num) {
  return num % 2 === 0
}

function* fibonacciSequence (numbers, limit) {
  while (numbers.last() < limit) {
    var next = numbers.last() + numbers.previous()
    numbers.push(next)
    yield numbers.last()
  }
}

function reduceIter (iter, fn) {
  var acc = iter.next().value
  for (var curr = iter.next(); curr.done === false; curr = iter.next()) {
    if (isEven(curr.value)) {
      acc = fn(acc, curr.value)
    }
  }
  return acc
}

function run (limit) {
  var fibonacciNumbers = [1, 2]
  fibonacciNumbers.last = function () {
    return this[this.length - 1]
  }
  fibonacciNumbers.previous = function () {
    return this[this.length - 2]
  }

  return reduceIter(fibonacciSequence(fibonacciNumbers, limit), (acc, curr) => acc + curr)
}

module.exports = {run: run}
